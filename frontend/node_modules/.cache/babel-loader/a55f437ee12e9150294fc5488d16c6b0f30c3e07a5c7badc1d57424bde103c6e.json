{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\NeighborTradeMarket\\\\frontend\\\\src\\\\contexts\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport api from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport function useAuth() {\n  _s();\n  return useContext(AuthContext);\n}\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport function AuthProvider({\n  children\n}) {\n  _s2();\n  const [currentUser, setCurrentUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [token, setToken] = useState(localStorage.getItem('token'));\n  useEffect(() => {\n    // Verificar se o token existe no localStorage\n    const storedToken = localStorage.getItem('token');\n    if (storedToken) {\n      setToken(storedToken);\n      fetchUserProfile(storedToken);\n    } else {\n      setLoading(false);\n    }\n  }, []);\n  const fetchUserProfile = async authToken => {\n    try {\n      // Configurar o token no cabeçalho de autorização\n      api.defaults.headers.common['Authorization'] = `Bearer ${authToken}`;\n\n      // Obter o perfil do utilizador\n      const response = await api.get('/perfil');\n      setCurrentUser(response.data);\n    } catch (error) {\n      console.error('Erro ao obter perfil do utilizador:', error);\n      // Se houver erro, limpar o token\n      localStorage.removeItem('token');\n      setToken(null);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const login = async (email, password) => {\n    try {\n      const response = await api.post('/login', {\n        Email: email,\n        Password: password\n      });\n      const authToken = response.data.token;\n\n      // Guardar o token no localStorage\n      localStorage.setItem('token', authToken);\n      setToken(authToken);\n\n      // Configurar o token no cabeçalho de autorização\n      api.defaults.headers.common['Authorization'] = `Bearer ${authToken}`;\n\n      // Obter o perfil do utilizador\n      await fetchUserProfile(authToken);\n      return response.data;\n    } catch (error) {\n      throw error;\n    }\n  };\n  const register = async userData => {\n    try {\n      const response = await api.post('/register', userData);\n      return response.data;\n    } catch (error) {\n      throw error;\n    }\n  };\n  const logout = async () => {\n    try {\n      // Chamar a API para logout\n      if (token) {\n        await api.post('/logout');\n      }\n    } catch (error) {\n      console.error('Erro ao terminar sessão:', error);\n    } finally {\n      // Limpar token e utilizador mesmo se houver erro na API\n      localStorage.removeItem('token');\n      setToken(null);\n      setCurrentUser(null);\n      // Remover o token do cabeçalho de autorização\n      delete api.defaults.headers.common['Authorization'];\n    }\n  };\n  const resetPassword = async email => {\n    try {\n      const response = await api.post('/password/reset', {\n        Email: email\n      });\n      return response.data;\n    } catch (error) {\n      throw error;\n    }\n  };\n  const updateProfile = async profileData => {\n    try {\n      const response = await api.put('/perfil', profileData);\n      setCurrentUser(response.data);\n      return response.data;\n    } catch (error) {\n      throw error;\n    }\n  };\n  const value = {\n    currentUser,\n    login,\n    register,\n    logout,\n    resetPassword,\n    updateProfile,\n    loading,\n    isAuthenticated: !!currentUser\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: !loading && children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 123,\n    columnNumber: 9\n  }, this);\n}\n_s2(AuthProvider, \"jtwUNoxKZ5AWYW2pfoZjKzJF1gw=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","api","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","AuthProvider","children","_s2","currentUser","setCurrentUser","loading","setLoading","token","setToken","localStorage","getItem","storedToken","fetchUserProfile","authToken","defaults","headers","common","response","get","data","error","console","removeItem","login","email","password","post","Email","Password","setItem","register","userData","logout","resetPassword","updateProfile","profileData","put","value","isAuthenticated","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/xampp/htdocs/NeighborTradeMarket/frontend/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\nimport api from '../services/api';\n\nconst AuthContext = createContext();\n\nexport function useAuth() {\n    return useContext(AuthContext);\n}\n\nexport function AuthProvider({ children }) {\n    const [currentUser, setCurrentUser] = useState(null);\n    const [loading, setLoading] = useState(true);\n    const [token, setToken] = useState(localStorage.getItem('token'));\n\n    useEffect(() => {\n        // Verificar se o token existe no localStorage\n        const storedToken = localStorage.getItem('token');\n        if (storedToken) {\n            setToken(storedToken);\n            fetchUserProfile(storedToken);\n        } else {\n            setLoading(false);\n        }\n    }, []);\n\n    const fetchUserProfile = async (authToken) => {\n        try {\n            // Configurar o token no cabeçalho de autorização\n            api.defaults.headers.common['Authorization'] = `Bearer ${authToken}`;\n            \n            // Obter o perfil do utilizador\n            const response = await api.get('/perfil');\n            setCurrentUser(response.data);\n        } catch (error) {\n            console.error('Erro ao obter perfil do utilizador:', error);\n            // Se houver erro, limpar o token\n            localStorage.removeItem('token');\n            setToken(null);\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    const login = async (email, password) => {\n        try {\n            const response = await api.post('/login', { Email: email, Password: password });\n            const authToken = response.data.token;\n            \n            // Guardar o token no localStorage\n            localStorage.setItem('token', authToken);\n            setToken(authToken);\n            \n            // Configurar o token no cabeçalho de autorização\n            api.defaults.headers.common['Authorization'] = `Bearer ${authToken}`;\n            \n            // Obter o perfil do utilizador\n            await fetchUserProfile(authToken);\n            \n            return response.data;\n        } catch (error) {\n            throw error;\n        }\n    };\n\n    const register = async (userData) => {\n        try {\n            const response = await api.post('/register', userData);\n            return response.data;\n        } catch (error) {\n            throw error;\n        }\n    };\n\n    const logout = async () => {\n        try {\n            // Chamar a API para logout\n            if (token) {\n                await api.post('/logout');\n            }\n        } catch (error) {\n            console.error('Erro ao terminar sessão:', error);\n        } finally {\n            // Limpar token e utilizador mesmo se houver erro na API\n            localStorage.removeItem('token');\n            setToken(null);\n            setCurrentUser(null);\n            // Remover o token do cabeçalho de autorização\n            delete api.defaults.headers.common['Authorization'];\n        }\n    };\n\n    const resetPassword = async (email) => {\n        try {\n            const response = await api.post('/password/reset', { Email: email });\n            return response.data;\n        } catch (error) {\n            throw error;\n        }\n    };\n\n    const updateProfile = async (profileData) => {\n        try {\n            const response = await api.put('/perfil', profileData);\n            setCurrentUser(response.data);\n            return response.data;\n        } catch (error) {\n            throw error;\n        }\n    };\n\n    const value = {\n        currentUser,\n        login,\n        register,\n        logout,\n        resetPassword,\n        updateProfile,\n        loading,\n        isAuthenticated: !!currentUser\n    };\n\n    return (\n        <AuthContext.Provider value={value}>\n            {!loading && children}\n        </AuthContext.Provider>\n    );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}