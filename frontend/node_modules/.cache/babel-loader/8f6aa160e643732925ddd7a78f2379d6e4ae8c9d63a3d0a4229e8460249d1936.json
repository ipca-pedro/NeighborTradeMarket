{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\NeighborTradeMarket\\\\frontend\\\\src\\\\contexts\\\\ChatContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatContext = /*#__PURE__*/createContext();\nexport const ChatProvider = ({\n  children\n}) => {\n  _s();\n  const [isChatOpen, setIsChatOpen] = useState(false);\n  const toggleChat = () => {\n    setIsChatOpen(!isChatOpen);\n  };\n  const closeChat = () => {\n    setIsChatOpen(false);\n  };\n  return /*#__PURE__*/_jsxDEV(ChatContext.Provider, {\n    value: {\n      isChatOpen,\n      toggleChat,\n      closeChat\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n};\n_s(ChatProvider, \"1RwI3Rpum6EBbUdSXPo/Ywgstjs=\");\n_c = ChatProvider;\nexport const useChat = () => {\n  _s2();\n  const context = useContext(ChatContext);\n  if (!context) {\n    throw new Error('useChat must be used within a ChatProvider');\n  }\n  return context;\n};\n_s2(useChat, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"ChatProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","jsxDEV","_jsxDEV","ChatContext","ChatProvider","children","_s","isChatOpen","setIsChatOpen","toggleChat","closeChat","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useChat","_s2","context","Error","$RefreshReg$"],"sources":["C:/xampp/htdocs/NeighborTradeMarket/frontend/src/contexts/ChatContext.js"],"sourcesContent":["import React, { createContext, useContext, useState } from 'react';\n\nconst ChatContext = createContext();\n\nexport const ChatProvider = ({ children }) => {\n    const [isChatOpen, setIsChatOpen] = useState(false);\n\n    const toggleChat = () => {\n        setIsChatOpen(!isChatOpen);\n    };\n\n    const closeChat = () => {\n        setIsChatOpen(false);\n    };\n\n    return (\n        <ChatContext.Provider value={{ isChatOpen, toggleChat, closeChat }}>\n            {children}\n        </ChatContext.Provider>\n    );\n};\n\nexport const useChat = () => {\n    const context = useContext(ChatContext);\n    if (!context) {\n        throw new Error('useChat must be used within a ChatProvider');\n    }\n    return context;\n};\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnE,MAAMC,WAAW,gBAAGL,aAAa,CAAC,CAAC;AAEnC,OAAO,MAAMM,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC1C,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EAEnD,MAAMS,UAAU,GAAGA,CAAA,KAAM;IACrBD,aAAa,CAAC,CAACD,UAAU,CAAC;EAC9B,CAAC;EAED,MAAMG,SAAS,GAAGA,CAAA,KAAM;IACpBF,aAAa,CAAC,KAAK,CAAC;EACxB,CAAC;EAED,oBACIN,OAAA,CAACC,WAAW,CAACQ,QAAQ;IAACC,KAAK,EAAE;MAAEL,UAAU;MAAEE,UAAU;MAAEC;IAAU,CAAE;IAAAL,QAAA,EAC9DA;EAAQ;IAAAQ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACS,CAAC;AAE/B,CAAC;AAACV,EAAA,CAhBWF,YAAY;AAAAa,EAAA,GAAZb,YAAY;AAkBzB,OAAO,MAAMc,OAAO,GAAGA,CAAA,KAAM;EAAAC,GAAA;EACzB,MAAMC,OAAO,GAAGrB,UAAU,CAACI,WAAW,CAAC;EACvC,IAAI,CAACiB,OAAO,EAAE;IACV,MAAM,IAAIC,KAAK,CAAC,4CAA4C,CAAC;EACjE;EACA,OAAOD,OAAO;AAClB,CAAC;AAACD,GAAA,CANWD,OAAO;AAAA,IAAAD,EAAA;AAAAK,YAAA,CAAAL,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}