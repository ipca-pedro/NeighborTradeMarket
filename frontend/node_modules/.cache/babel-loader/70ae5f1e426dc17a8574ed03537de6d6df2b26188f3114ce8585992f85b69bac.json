{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\NeighborTradeMarket\\\\frontend\\\\src\\\\components\\\\chat\\\\ChatBot.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { Form, Button } from 'react-bootstrap';\nimport { useChat } from '../../contexts/ChatContext';\nimport './ChatBot.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatBot = () => {\n  _s();\n  const {\n    isChatOpen,\n    toggleChat,\n    closeChat\n  } = useChat();\n  const chatRef = useRef(null);\n  const [messages, setMessages] = useState([{\n    type: 'bot',\n    text: 'Olá! Sou o assistente virtual do NeighborTrade. Como posso ajudar?',\n    options: ['Como criar um anúncio?', 'Como funciona a compra?', 'Políticas de devolução', 'Outro assunto']\n  }]);\n  const [inputText, setInputText] = useState('');\n  const messagesEndRef = useRef(null);\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  };\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n  useEffect(() => {\n    const handleClickOutside = event => {\n      if (chatRef.current && !chatRef.current.contains(event.target) && !event.target.closest('.chat-toggle-button')) {\n        closeChat();\n      }\n    };\n    if (isChatOpen) {\n      document.addEventListener('mousedown', handleClickOutside);\n    }\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [isChatOpen, closeChat]);\n  const handleSendMessage = text => {\n    // Adiciona mensagem do usuário\n    setMessages(prev => [...prev, {\n      type: 'user',\n      text\n    }]);\n\n    // Simula resposta do bot\n    setTimeout(() => {\n      let botResponse = {\n        type: 'bot',\n        text: '',\n        options: []\n      };\n\n      // Respostas pré-definidas baseadas na entrada do usuário\n      if (text.toLowerCase().includes('criar anúncio') || text === 'Como criar um anúncio?') {\n        botResponse.text = 'Para criar um anúncio, siga estes passos:\\n1. Faça login na sua conta\\n2. Clique no botão \"Criar Anúncio\"\\n3. Preencha os detalhes do produto\\n4. Adicione fotos\\n5. Clique em \"Publicar\"';\n        botResponse.options = ['Como fazer login?', 'Tipos de anúncios permitidos', 'Voltar ao início'];\n      } else if (text.toLowerCase().includes('compra') || text === 'Como funciona a compra?') {\n        botResponse.text = 'O processo de compra é simples:\\n1. Encontre o produto desejado\\n2. Clique em \"Ver Detalhes\"\\n3. Entre em contato com o vendedor\\n4. Combine o pagamento e a entrega';\n        botResponse.options = ['Métodos de pagamento', 'Segurança na compra', 'Voltar ao início'];\n      } else if (text.toLowerCase().includes('devolução') || text === 'Políticas de devolução') {\n        botResponse.text = 'Nossa política de devolução:\\n- 7 dias para desistência da compra\\n- Produto deve estar nas condições originais\\n- Entre em contato com o vendedor primeiro';\n        botResponse.options = ['Como solicitar devolução', 'Prazos de devolução', 'Voltar ao início'];\n      } else if (text === 'Voltar ao início') {\n        botResponse.text = 'Como posso ajudar?';\n        botResponse.options = ['Como criar um anúncio?', 'Como funciona a compra?', 'Políticas de devolução', 'Outro assunto'];\n      } else {\n        botResponse.text = 'Para esse assunto, recomendo entrar em contato com nossa equipe por email: info@neighbortrade.com';\n        botResponse.options = ['Voltar ao início'];\n      }\n      setMessages(prev => [...prev, botResponse]);\n    }, 1000);\n    setInputText('');\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (inputText.trim()) {\n      handleSendMessage(inputText.trim());\n    }\n  };\n  const handleOptionClick = option => {\n    handleSendMessage(option);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `chat-widget ${isChatOpen ? 'expanded' : ''}`,\n    ref: chatRef,\n    children: !isChatOpen ? /*#__PURE__*/_jsxDEV(Button, {\n      className: \"chat-toggle-button\",\n      onClick: toggleChat,\n      variant: \"primary\",\n      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fas fa-robot me-2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 21\n      }, this), \"Assistente Virtual\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-header bg-primary text-white\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex justify-content-between align-items-center p-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fas fa-robot me-2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 33\n            }, this), \"Apoio ao Cliente\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"link\",\n            className: \"text-white p-0\",\n            onClick: closeChat,\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fas fa-times\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-body p-0\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"messages-container p-3\",\n          children: [messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `message ${msg.type}`,\n            children: [msg.type === 'bot' && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"bot-avatar\",\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fas fa-robot\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-content\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: msg.text.split('\\\\n').map((line, i) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n                  children: [line, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 142,\n                    columnNumber: 49\n                  }, this)]\n                }, i, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 140,\n                  columnNumber: 45\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 41\n              }, this), msg.options && msg.type === 'bot' && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"options-container\",\n                children: msg.options.map((option, i) => /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"outline-primary\",\n                  size: \"sm\",\n                  className: \"me-2 mb-2\",\n                  onClick: () => handleOptionClick(option),\n                  children: option\n                }, i, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 148,\n                  columnNumber: 53\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 37\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 33\n          }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: messagesEndRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: handleSubmit,\n          className: \"chat-input-form\",\n          children: /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"d-flex p-3 border-top\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              placeholder: \"Digite sua mensagem...\",\n              value: inputText,\n              onChange: e => setInputText(e.target.value),\n              className: \"me-2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              variant: \"primary\",\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fas fa-paper-plane\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 9\n  }, this);\n};\n_s(ChatBot, \"aJBenfMJj6gGIl+YCABr37krL78=\", false, function () {\n  return [useChat];\n});\n_c = ChatBot;\nexport default ChatBot;\nvar _c;\n$RefreshReg$(_c, \"ChatBot\");","map":{"version":3,"names":["React","useState","useRef","useEffect","Form","Button","useChat","jsxDEV","_jsxDEV","ChatBot","_s","isChatOpen","toggleChat","closeChat","chatRef","messages","setMessages","type","text","options","inputText","setInputText","messagesEndRef","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","handleClickOutside","event","contains","target","closest","document","addEventListener","removeEventListener","handleSendMessage","prev","setTimeout","botResponse","toLowerCase","includes","handleSubmit","e","preventDefault","trim","handleOptionClick","option","className","ref","children","onClick","variant","fileName","_jsxFileName","lineNumber","columnNumber","map","msg","index","split","line","i","Fragment","size","onSubmit","Group","Control","placeholder","value","onChange","_c","$RefreshReg$"],"sources":["C:/xampp/htdocs/NeighborTradeMarket/frontend/src/components/chat/ChatBot.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport { Form, Button } from 'react-bootstrap';\nimport { useChat } from '../../contexts/ChatContext';\nimport './ChatBot.css';\n\nconst ChatBot = () => {\n    const { isChatOpen, toggleChat, closeChat } = useChat();\n    const chatRef = useRef(null);\n    const [messages, setMessages] = useState([\n        {\n            type: 'bot',\n            text: 'Olá! Sou o assistente virtual do NeighborTrade. Como posso ajudar?',\n            options: [\n                'Como criar um anúncio?',\n                'Como funciona a compra?',\n                'Políticas de devolução',\n                'Outro assunto'\n            ]\n        }\n    ]);\n    const [inputText, setInputText] = useState('');\n    const messagesEndRef = useRef(null);\n\n    const scrollToBottom = () => {\n        messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\n    };\n\n    useEffect(() => {\n        scrollToBottom();\n    }, [messages]);\n\n    useEffect(() => {\n        const handleClickOutside = (event) => {\n            if (chatRef.current && !chatRef.current.contains(event.target) && \n                !event.target.closest('.chat-toggle-button')) {\n                closeChat();\n            }\n        };\n\n        if (isChatOpen) {\n            document.addEventListener('mousedown', handleClickOutside);\n        }\n\n        return () => {\n            document.removeEventListener('mousedown', handleClickOutside);\n        };\n    }, [isChatOpen, closeChat]);\n\n    const handleSendMessage = (text) => {\n        // Adiciona mensagem do usuário\n        setMessages(prev => [...prev, { type: 'user', text }]);\n\n        // Simula resposta do bot\n        setTimeout(() => {\n            let botResponse = {\n                type: 'bot',\n                text: '',\n                options: []\n            };\n\n            // Respostas pré-definidas baseadas na entrada do usuário\n            if (text.toLowerCase().includes('criar anúncio') || text === 'Como criar um anúncio?') {\n                botResponse.text = 'Para criar um anúncio, siga estes passos:\\n1. Faça login na sua conta\\n2. Clique no botão \"Criar Anúncio\"\\n3. Preencha os detalhes do produto\\n4. Adicione fotos\\n5. Clique em \"Publicar\"';\n                botResponse.options = ['Como fazer login?', 'Tipos de anúncios permitidos', 'Voltar ao início'];\n            } else if (text.toLowerCase().includes('compra') || text === 'Como funciona a compra?') {\n                botResponse.text = 'O processo de compra é simples:\\n1. Encontre o produto desejado\\n2. Clique em \"Ver Detalhes\"\\n3. Entre em contato com o vendedor\\n4. Combine o pagamento e a entrega';\n                botResponse.options = ['Métodos de pagamento', 'Segurança na compra', 'Voltar ao início'];\n            } else if (text.toLowerCase().includes('devolução') || text === 'Políticas de devolução') {\n                botResponse.text = 'Nossa política de devolução:\\n- 7 dias para desistência da compra\\n- Produto deve estar nas condições originais\\n- Entre em contato com o vendedor primeiro';\n                botResponse.options = ['Como solicitar devolução', 'Prazos de devolução', 'Voltar ao início'];\n            } else if (text === 'Voltar ao início') {\n                botResponse.text = 'Como posso ajudar?';\n                botResponse.options = [\n                    'Como criar um anúncio?',\n                    'Como funciona a compra?',\n                    'Políticas de devolução',\n                    'Outro assunto'\n                ];\n            } else {\n                botResponse.text = 'Para esse assunto, recomendo entrar em contato com nossa equipe por email: info@neighbortrade.com';\n                botResponse.options = ['Voltar ao início'];\n            }\n\n            setMessages(prev => [...prev, botResponse]);\n        }, 1000);\n\n        setInputText('');\n    };\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        if (inputText.trim()) {\n            handleSendMessage(inputText.trim());\n        }\n    };\n\n    const handleOptionClick = (option) => {\n        handleSendMessage(option);\n    };\n\n    return (\n        <div className={`chat-widget ${isChatOpen ? 'expanded' : ''}`} ref={chatRef}>\n            {!isChatOpen ? (\n                <Button \n                    className=\"chat-toggle-button\"\n                    onClick={toggleChat}\n                    variant=\"primary\"\n                >\n                    <i className=\"fas fa-robot me-2\"></i>\n                    Assistente Virtual\n                </Button>\n            ) : (\n                <div className=\"chat-container\">\n                    <div className=\"chat-header bg-primary text-white\">\n                        <div className=\"d-flex justify-content-between align-items-center p-3\">\n                            <div>\n                                <i className=\"fas fa-robot me-2\"></i>\n                                Apoio ao Cliente\n                            </div>\n                            <Button \n                                variant=\"link\" \n                                className=\"text-white p-0\" \n                                onClick={closeChat}\n                            >\n                                <i className=\"fas fa-times\"></i>\n                            </Button>\n                        </div>\n                    </div>\n                    <div className=\"chat-body p-0\">\n                        <div className=\"messages-container p-3\">\n                            {messages.map((msg, index) => (\n                                <div key={index} className={`message ${msg.type}`}>\n                                    {msg.type === 'bot' && (\n                                        <div className=\"bot-avatar\">\n                                            <i className=\"fas fa-robot\"></i>\n                                        </div>\n                                    )}\n                                    <div className=\"message-content\">\n                                        <p>{msg.text.split('\\\\n').map((line, i) => (\n                                            <React.Fragment key={i}>\n                                                {line}\n                                                <br />\n                                            </React.Fragment>\n                                        ))}</p>\n                                        {msg.options && msg.type === 'bot' && (\n                                            <div className=\"options-container\">\n                                                {msg.options.map((option, i) => (\n                                                    <Button\n                                                        key={i}\n                                                        variant=\"outline-primary\"\n                                                        size=\"sm\"\n                                                        className=\"me-2 mb-2\"\n                                                        onClick={() => handleOptionClick(option)}\n                                                    >\n                                                        {option}\n                                                    </Button>\n                                                ))}\n                                            </div>\n                                        )}\n                                    </div>\n                                </div>\n                            ))}\n                            <div ref={messagesEndRef} />\n                        </div>\n                        <Form onSubmit={handleSubmit} className=\"chat-input-form\">\n                            <Form.Group className=\"d-flex p-3 border-top\">\n                                <Form.Control\n                                    type=\"text\"\n                                    placeholder=\"Digite sua mensagem...\"\n                                    value={inputText}\n                                    onChange={(e) => setInputText(e.target.value)}\n                                    className=\"me-2\"\n                                />\n                                <Button type=\"submit\" variant=\"primary\">\n                                    <i className=\"fas fa-paper-plane\"></i>\n                                </Button>\n                            </Form.Group>\n                        </Form>\n                    </div>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default ChatBot;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}