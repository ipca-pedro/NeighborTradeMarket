{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\NeighborTradeMarket\\\\frontend\\\\src\\\\components\\\\admin\\\\AllUsers.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useMemo } from 'react';\nimport { Container, Table, Button, Modal, Form, Alert, Card, Badge, Spinner, Dropdown, InputGroup, FormControl, Row, Col, OverlayTrigger, Tooltip } from 'react-bootstrap';\nimport api, { adminService } from '../../services/api';\nimport Header from '../layout/Header';\nimport Footer from '../layout/Footer';\n\n// Helper function to get the base URL for storage - Reuse from PendingUsers\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst getStorageBaseUrl = () => {\n  const apiUrl = api.defaults.baseURL || '';\n  return apiUrl.endsWith('/api') ? apiUrl.slice(0, -4) : apiUrl;\n};\n\n// Helper function to render address tooltip - Reuse from PendingUsers\nconst renderAddressTooltip = (props, morada) => /*#__PURE__*/_jsxDEV(Tooltip, {\n  id: \"address-tooltip\",\n  ...props,\n  children: morada !== null && morada !== void 0 && morada.Rua ? morada.Rua : 'Morada não disponível'\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 15,\n  columnNumber: 5\n}, this);\n\n// Helper function to get document info - Reuse from PendingUsers\nconst getDocumentInfo = imagem => {\n  if (!(imagem !== null && imagem !== void 0 && imagem.Caminho)) {\n    return {\n      text: 'Sem documento',\n      isPdf: false,\n      path: null\n    };\n  }\n  const isPdf = imagem.Caminho.toLowerCase().endsWith('.pdf');\n  const filename = imagem.Caminho.split('/').pop();\n  return {\n    text: filename,\n    isPdf: isPdf,\n    path: imagem.Caminho\n  };\n};\nconst AllUsers = () => {\n  _s();\n  const [allUsers, setAllUsers] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [message, setMessage] = useState('');\n\n  // --- State for Filtering and Searching ---\n  const [searchTerm, setSearchTerm] = useState('');\n  const [filterStatus, setFilterStatus] = useState('');\n  const [filterType, setFilterType] = useState('');\n\n  // --- Assuming Status and Type options (fetch from API later if dynamic) ---\n  // TODO: Ideally, fetch these from the database/API\n  const statusOptions = [{\n    id: '',\n    name: 'Todos os Estados'\n  }, {\n    id: 1,\n    name: 'Pendente'\n  }, {\n    id: 2,\n    name: 'Ativo'\n  }, {\n    id: 8,\n    name: 'Rejeitado'\n  }\n  // Add other statuses like Inativo, Bloqueado if they exist with correct IDs from DB\n  ];\n  const typeOptions = [{\n    id: '',\n    name: 'Todos os Tipos'\n  }, {\n    id: 1,\n    name: 'Administrador'\n  }, {\n    id: 2,\n    name: 'Utilizador Normal'\n  }];\n  // --- --- --- --- --- --- --- --- --- --- ---\n\n  useEffect(() => {\n    loadAllUsers();\n  }, []);\n  const loadAllUsers = async () => {\n    try {\n      setLoading(true);\n      setError('');\n      setMessage('');\n      const response = await adminService.getAllUsers();\n      setAllUsers(response || []);\n    } catch (err) {\n      console.error('Erro ao carregar utilizadores:', err);\n      setError('Erro ao carregar utilizadores. Por favor, tente novamente.');\n      setAllUsers([]);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // --- Filtering Logic --- \n  const filteredUsers = useMemo(() => {\n    return allUsers.filter(user => {\n      var _user$Name, _user$User_Name, _user$Email;\n      const statusMatch = filterStatus === '' || user.Status_UtilizadorID_status_utilizador === parseInt(filterStatus);\n      const typeMatch = filterType === '' || user.TipoUserID_TipoUser === parseInt(filterType);\n      const searchMatch = searchTerm === '' || ((_user$Name = user.Name) === null || _user$Name === void 0 ? void 0 : _user$Name.toLowerCase().includes(searchTerm.toLowerCase())) || ((_user$User_Name = user.User_Name) === null || _user$User_Name === void 0 ? void 0 : _user$User_Name.toLowerCase().includes(searchTerm.toLowerCase())) || ((_user$Email = user.Email) === null || _user$Email === void 0 ? void 0 : _user$Email.toLowerCase().includes(searchTerm.toLowerCase()));\n      return statusMatch && typeMatch && searchMatch;\n    });\n  }, [allUsers, searchTerm, filterStatus, filterType]);\n  // --- --- --- --- --- --- --- --- --- --- ---\n\n  // --- Status and Type Badge Functions (Adjust IDs based on actual DB values) ---\n  const getStatusBadge = statusId => {\n    // TODO: Verify these IDs against your status_utilizador table\n    switch (statusId) {\n      case 1:\n        return /*#__PURE__*/_jsxDEV(Badge, {\n          bg: \"warning\",\n          children: \"Pendente\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 28\n        }, this);\n      case 2:\n        return /*#__PURE__*/_jsxDEV(Badge, {\n          bg: \"success\",\n          children: \"Ativo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 28\n        }, this);\n      case 8:\n        return /*#__PURE__*/_jsxDEV(Badge, {\n          bg: \"danger\",\n          children: \"Rejeitado\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 28\n        }, this);\n      // Add other cases: Inativo, Bloqueado, etc.\n      default:\n        return /*#__PURE__*/_jsxDEV(Badge, {\n          bg: \"light\",\n          text: \"dark\",\n          children: [\"Desconhecido (\", statusId, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 29\n        }, this);\n    }\n  };\n  const getUserTypeBadge = typeId => {\n    // Assuming 1=Admin, 2=User based on previous context\n    switch (typeId) {\n      case 1:\n        return /*#__PURE__*/_jsxDEV(Badge, {\n          bg: \"primary\",\n          children: \"Admin\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 28\n        }, this);\n      case 2:\n        return /*#__PURE__*/_jsxDEV(Badge, {\n          bg: \"info\",\n          children: \"Utilizador\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 28\n        }, this);\n      default:\n        return /*#__PURE__*/_jsxDEV(Badge, {\n          bg: \"light\",\n          text: \"dark\",\n          children: [\"Desconhecido (\", typeId, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 29\n        }, this);\n    }\n  };\n  // --- --- --- --- --- --- --- --- --- --- ---\n\n  // --- Placeholder for Status Change - Needs API implementation if required ---\n  const handleStatusChange = async (userId, newStatusId) => {\n    // TODO: Implement API call if needed, or remove this if status change is done elsewhere\n    setMessage(`Ação 'Alterar Status' para User ID ${userId} para ${newStatusId} ainda não implementada.`);\n    setError('');\n    setTimeout(() => setMessage(''), 3000);\n  };\n  // --- --- --- --- --- --- --- --- --- --- ---\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      className: \"my-5\",\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        className: \"shadow-sm mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n          className: \"bg-primary text-white d-flex justify-content-between align-items-center\",\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"mb-0\",\n            children: \"Gest\\xE3o de Utilizadores\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n          children: [message && /*#__PURE__*/_jsxDEV(Alert, {\n            variant: \"success\",\n            onClose: () => setMessage(''),\n            dismissible: true,\n            children: message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 37\n          }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n            variant: \"danger\",\n            onClose: () => setError(''),\n            dismissible: true,\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 35\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            className: \"mb-3 gx-2\",\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              md: 5,\n              children: /*#__PURE__*/_jsxDEV(InputGroup, {\n                children: [/*#__PURE__*/_jsxDEV(InputGroup.Text, {\n                  children: /*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"fas fa-search\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 140,\n                    columnNumber: 54\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 140,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                  placeholder: \"Pesquisar por nome, username ou email...\",\n                  value: searchTerm,\n                  onChange: e => setSearchTerm(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 141,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              md: 3,\n              children: /*#__PURE__*/_jsxDEV(Form.Select, {\n                value: filterStatus,\n                onChange: e => setFilterStatus(e.target.value),\n                children: statusOptions.map(opt => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: opt.id,\n                  children: opt.name\n                }, opt.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 150,\n                  columnNumber: 63\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              md: 3,\n              children: /*#__PURE__*/_jsxDEV(Form.Select, {\n                value: filterType,\n                onChange: e => setFilterType(e.target.value),\n                children: typeOptions.map(opt => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: opt.id,\n                  children: opt.name\n                }, opt.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 155,\n                  columnNumber: 61\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              md: 1,\n              className: \"d-flex align-items-end\",\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"outline-secondary\",\n                onClick: () => {\n                  setSearchTerm('');\n                  setFilterStatus('');\n                  setFilterType('');\n                },\n                title: \"Limpar Filtros\",\n                children: /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"fas fa-times\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 160,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 30\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 25\n          }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-center py-5\",\n            children: [/*#__PURE__*/_jsxDEV(Spinner, {\n              animation: \"border\",\n              variant: \"primary\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"mt-3\",\n              children: \"A carregar utilizadores...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 29\n          }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-2 text-muted small\",\n              children: [\"A mostrar \", filteredUsers.length, \" de \", allUsers.length, \" utilizadores\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Table, {\n              responsive: true,\n              hover: true,\n              className: \"align-middle\",\n              children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                className: \"bg-light\",\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Utilizador\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 177,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Email\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 178,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Morada\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 179,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Tipo\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 180,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Estado\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 181,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Documento\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 182,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 176,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: filteredUsers.length > 0 ? filteredUsers.map(user => {\n                  var _user$Name2, _user$Name2$charAt, _user$morada, _user$morada$Rua, _user$morada2, _user$morada2$Rua;\n                  const docInfo = getDocumentInfo(user.imagem);\n                  return /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                      children: /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"d-flex align-items-center\",\n                        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"bg-light rounded-circle d-flex align-items-center justify-content-center me-2\",\n                          style: {\n                            width: '40px',\n                            height: '40px'\n                          },\n                          children: /*#__PURE__*/_jsxDEV(\"span\", {\n                            title: `${user.Name} (${user.User_Name})`,\n                            children: ((_user$Name2 = user.Name) === null || _user$Name2 === void 0 ? void 0 : (_user$Name2$charAt = _user$Name2.charAt(0)) === null || _user$Name2$charAt === void 0 ? void 0 : _user$Name2$charAt.toUpperCase()) || '?'\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 194,\n                            columnNumber: 69\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 193,\n                          columnNumber: 65\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"fw-bold\",\n                            children: user.Name\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 197,\n                            columnNumber: 69\n                          }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                            className: \"text-muted\",\n                            children: [\"@\", user.User_Name]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 198,\n                            columnNumber: 69\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 196,\n                          columnNumber: 65\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 192,\n                        columnNumber: 61\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 191,\n                      columnNumber: 57\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: user.Email\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 202,\n                      columnNumber: 57\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: /*#__PURE__*/_jsxDEV(OverlayTrigger, {\n                        placement: \"top\",\n                        delay: {\n                          show: 250,\n                          hide: 400\n                        },\n                        overlay: props => renderAddressTooltip(props, user.morada),\n                        children: /*#__PURE__*/_jsxDEV(\"span\", {\n                          children: ((_user$morada = user.morada) === null || _user$morada === void 0 ? void 0 : (_user$morada$Rua = _user$morada.Rua) === null || _user$morada$Rua === void 0 ? void 0 : _user$morada$Rua.substring(0, 25)) + (((_user$morada2 = user.morada) === null || _user$morada2 === void 0 ? void 0 : (_user$morada2$Rua = _user$morada2.Rua) === null || _user$morada2$Rua === void 0 ? void 0 : _user$morada2$Rua.length) > 25 ? '...' : '') || 'N/A'\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 205,\n                          columnNumber: 65\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 204,\n                        columnNumber: 61\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 203,\n                      columnNumber: 57\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: getUserTypeBadge(user.TipoUserID_TipoUser)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 208,\n                      columnNumber: 57\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: getStatusBadge(user.Status_UtilizadorID_status_utilizador)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 209,\n                      columnNumber: 57\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: docInfo.path ? /*#__PURE__*/_jsxDEV(\"a\", {\n                        href: `${getStorageBaseUrl()}/storage/${docInfo.path}`,\n                        target: \"_blank\",\n                        rel: \"noopener noreferrer\",\n                        className: \"btn btn-sm btn-outline-secondary d-inline-flex align-items-center\",\n                        title: docInfo.text,\n                        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                          className: `fas ${docInfo.isPdf ? 'fa-file-pdf' : 'fa-file-image'} me-1`\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 219,\n                          columnNumber: 69\n                        }, this), \" Ver\"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 212,\n                        columnNumber: 65\n                      }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"text-muted small\",\n                        children: \"Nenhum\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 222,\n                        columnNumber: 65\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 210,\n                      columnNumber: 57\n                    }, this)]\n                  }, user.ID_User, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 190,\n                    columnNumber: 53\n                  }, this);\n                }) : /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: /*#__PURE__*/_jsxDEV(\"td\", {\n                    colSpan: \"6\",\n                    className: \"text-center text-muted py-4\",\n                    children: \"Nenhum utilizador encontrado com os filtros atuais.\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 230,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 229,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 185,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(AllUsers, \"kMCqqBI1sEBxij5OJyBE76TIKl4=\");\n_c = AllUsers;\nexport default AllUsers;\nvar _c;\n$RefreshReg$(_c, \"AllUsers\");","map":{"version":3,"names":["React","useState","useEffect","useMemo","Container","Table","Button","Modal","Form","Alert","Card","Badge","Spinner","Dropdown","InputGroup","FormControl","Row","Col","OverlayTrigger","Tooltip","api","adminService","Header","Footer","jsxDEV","_jsxDEV","Fragment","_Fragment","getStorageBaseUrl","apiUrl","defaults","baseURL","endsWith","slice","renderAddressTooltip","props","morada","id","children","Rua","fileName","_jsxFileName","lineNumber","columnNumber","getDocumentInfo","imagem","Caminho","text","isPdf","path","toLowerCase","filename","split","pop","AllUsers","_s","allUsers","setAllUsers","loading","setLoading","error","setError","message","setMessage","searchTerm","setSearchTerm","filterStatus","setFilterStatus","filterType","setFilterType","statusOptions","name","typeOptions","loadAllUsers","response","getAllUsers","err","console","filteredUsers","filter","user","_user$Name","_user$User_Name","_user$Email","statusMatch","Status_UtilizadorID_status_utilizador","parseInt","typeMatch","TipoUserID_TipoUser","searchMatch","Name","includes","User_Name","Email","getStatusBadge","statusId","bg","getUserTypeBadge","typeId","handleStatusChange","userId","newStatusId","setTimeout","className","Body","variant","onClose","dismissible","md","Text","placeholder","value","onChange","e","target","Select","map","opt","onClick","title","animation","length","responsive","hover","_user$Name2","_user$Name2$charAt","_user$morada","_user$morada$Rua","_user$morada2","_user$morada2$Rua","docInfo","style","width","height","charAt","toUpperCase","placement","delay","show","hide","overlay","substring","href","rel","ID_User","colSpan","_c","$RefreshReg$"],"sources":["C:/xampp/htdocs/NeighborTradeMarket/frontend/src/components/admin/AllUsers.js"],"sourcesContent":["import React, { useState, useEffect, useMemo } from 'react';\nimport { Container, Table, Button, Modal, Form, Alert, Card, Badge, Spinner, Dropdown, InputGroup, FormControl, Row, Col, OverlayTrigger, Tooltip } from 'react-bootstrap';\nimport api, { adminService } from '../../services/api';\nimport Header from '../layout/Header';\nimport Footer from '../layout/Footer';\n\n// Helper function to get the base URL for storage - Reuse from PendingUsers\nconst getStorageBaseUrl = () => {\n    const apiUrl = api.defaults.baseURL || '';\n    return apiUrl.endsWith('/api') ? apiUrl.slice(0, -4) : apiUrl;\n};\n\n// Helper function to render address tooltip - Reuse from PendingUsers\nconst renderAddressTooltip = (props, morada) => (\n    <Tooltip id=\"address-tooltip\" {...props}>\n        {morada?.Rua ? morada.Rua : 'Morada não disponível'}\n        {/* Add more address fields here if available */} \n    </Tooltip>\n);\n\n// Helper function to get document info - Reuse from PendingUsers\nconst getDocumentInfo = (imagem) => {\n    if (!imagem?.Caminho) {\n        return { text: 'Sem documento', isPdf: false, path: null };\n    }\n    const isPdf = imagem.Caminho.toLowerCase().endsWith('.pdf');\n    const filename = imagem.Caminho.split('/').pop();\n    return { text: filename, isPdf: isPdf, path: imagem.Caminho };\n};\n\nconst AllUsers = () => {\n    const [allUsers, setAllUsers] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState('');\n    const [message, setMessage] = useState('');\n    \n    // --- State for Filtering and Searching ---\n    const [searchTerm, setSearchTerm] = useState('');\n    const [filterStatus, setFilterStatus] = useState('');\n    const [filterType, setFilterType] = useState('');\n\n    // --- Assuming Status and Type options (fetch from API later if dynamic) ---\n    // TODO: Ideally, fetch these from the database/API\n    const statusOptions = [\n        { id: '', name: 'Todos os Estados' },\n        { id: 1, name: 'Pendente' }, \n        { id: 2, name: 'Ativo' },\n        { id: 8, name: 'Rejeitado' },\n        // Add other statuses like Inativo, Bloqueado if they exist with correct IDs from DB\n    ];\n    const typeOptions = [\n        { id: '', name: 'Todos os Tipos' },\n        { id: 1, name: 'Administrador' },\n        { id: 2, name: 'Utilizador Normal' },\n    ];\n    // --- --- --- --- --- --- --- --- --- --- ---\n\n    useEffect(() => {\n        loadAllUsers();\n    }, []);\n\n    const loadAllUsers = async () => {\n        try {\n            setLoading(true);\n            setError('');\n            setMessage('');\n            const response = await adminService.getAllUsers();\n            setAllUsers(response || []);\n        } catch (err) {\n            console.error('Erro ao carregar utilizadores:', err);\n            setError('Erro ao carregar utilizadores. Por favor, tente novamente.');\n            setAllUsers([]);\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    // --- Filtering Logic --- \n    const filteredUsers = useMemo(() => {\n        return allUsers.filter(user => {\n            const statusMatch = filterStatus === '' || user.Status_UtilizadorID_status_utilizador === parseInt(filterStatus);\n            const typeMatch = filterType === '' || user.TipoUserID_TipoUser === parseInt(filterType);\n            const searchMatch = searchTerm === '' || \n                                user.Name?.toLowerCase().includes(searchTerm.toLowerCase()) ||\n                                user.User_Name?.toLowerCase().includes(searchTerm.toLowerCase()) ||\n                                user.Email?.toLowerCase().includes(searchTerm.toLowerCase());\n            return statusMatch && typeMatch && searchMatch;\n        });\n    }, [allUsers, searchTerm, filterStatus, filterType]);\n    // --- --- --- --- --- --- --- --- --- --- ---\n\n    // --- Status and Type Badge Functions (Adjust IDs based on actual DB values) ---\n    const getStatusBadge = (statusId) => {\n        // TODO: Verify these IDs against your status_utilizador table\n        switch (statusId) {\n            case 1: return <Badge bg=\"warning\">Pendente</Badge>;\n            case 2: return <Badge bg=\"success\">Ativo</Badge>;\n            case 8: return <Badge bg=\"danger\">Rejeitado</Badge>; \n            // Add other cases: Inativo, Bloqueado, etc.\n            default: return <Badge bg=\"light\" text=\"dark\">Desconhecido ({statusId})</Badge>;\n        }\n    };\n\n    const getUserTypeBadge = (typeId) => {\n        // Assuming 1=Admin, 2=User based on previous context\n        switch (typeId) {\n            case 1: return <Badge bg=\"primary\">Admin</Badge>;\n            case 2: return <Badge bg=\"info\">Utilizador</Badge>;\n            default: return <Badge bg=\"light\" text=\"dark\">Desconhecido ({typeId})</Badge>;\n        }\n    };\n    // --- --- --- --- --- --- --- --- --- --- ---\n\n    // --- Placeholder for Status Change - Needs API implementation if required ---\n    const handleStatusChange = async (userId, newStatusId) => {\n        // TODO: Implement API call if needed, or remove this if status change is done elsewhere\n        setMessage(`Ação 'Alterar Status' para User ID ${userId} para ${newStatusId} ainda não implementada.`);\n        setError('');\n        setTimeout(() => setMessage(''), 3000);\n    };\n    // --- --- --- --- --- --- --- --- --- --- ---\n\n    return (\n        <>\n            <Header />\n            <Container className=\"my-5\">\n                <Card className=\"shadow-sm mb-4\">\n                    <Card.Header className=\"bg-primary text-white d-flex justify-content-between align-items-center\">\n                        <h2 className=\"mb-0\">Gestão de Utilizadores</h2>\n                        {/* Optional: Add button to create new user? */}\n                    </Card.Header>\n                    <Card.Body>\n                        {message && <Alert variant=\"success\" onClose={() => setMessage('')} dismissible>{message}</Alert>}\n                        {error && <Alert variant=\"danger\" onClose={() => setError('')} dismissible>{error}</Alert>}\n                        \n                        {/* --- Filter and Search Controls --- */} \n                        <Row className=\"mb-3 gx-2\">\n                            <Col md={5}>\n                                <InputGroup>\n                                    <InputGroup.Text><i className=\"fas fa-search\"></i></InputGroup.Text>\n                                    <FormControl\n                                        placeholder=\"Pesquisar por nome, username ou email...\"\n                                        value={searchTerm}\n                                        onChange={(e) => setSearchTerm(e.target.value)}\n                                    />\n                                </InputGroup>\n                            </Col>\n                            <Col md={3}>\n                                <Form.Select value={filterStatus} onChange={(e) => setFilterStatus(e.target.value)}>\n                                    {statusOptions.map(opt => <option key={opt.id} value={opt.id}>{opt.name}</option>)} \n                                </Form.Select>\n                            </Col>\n                            <Col md={3}>\n                                <Form.Select value={filterType} onChange={(e) => setFilterType(e.target.value)}>\n                                    {typeOptions.map(opt => <option key={opt.id} value={opt.id}>{opt.name}</option>)}\n                                </Form.Select>\n                            </Col>\n                             <Col md={1} className=\"d-flex align-items-end\">\n                                <Button variant=\"outline-secondary\" onClick={() => { setSearchTerm(''); setFilterStatus(''); setFilterType(''); }} title=\"Limpar Filtros\">\n                                    <i className=\"fas fa-times\"></i>\n                                </Button>\n                            </Col>\n                        </Row>\n                         {/* --- --- --- --- --- --- --- --- --- */} \n\n                        {loading ? (\n                            <div className=\"text-center py-5\">\n                                <Spinner animation=\"border\" variant=\"primary\" />\n                                <p className=\"mt-3\">A carregar utilizadores...</p>\n                            </div>\n                        ) : (\n                            <>\n                                <div className=\"mb-2 text-muted small\">A mostrar {filteredUsers.length} de {allUsers.length} utilizadores</div>\n                                <Table responsive hover className=\"align-middle\">\n                                    <thead className=\"bg-light\">\n                                        <tr>\n                                            <th>Utilizador</th>\n                                            <th>Email</th>\n                                            <th>Morada</th>\n                                            <th>Tipo</th>\n                                            <th>Estado</th>\n                                            <th>Documento</th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        {filteredUsers.length > 0 ? (\n                                            filteredUsers.map(user => {\n                                                const docInfo = getDocumentInfo(user.imagem);\n                                                return (\n                                                    <tr key={user.ID_User}>\n                                                        <td>\n                                                            <div className=\"d-flex align-items-center\">\n                                                                <div className=\"bg-light rounded-circle d-flex align-items-center justify-content-center me-2\" style={{ width: '40px', height: '40px' }}>\n                                                                    <span title={`${user.Name} (${user.User_Name})`}>{user.Name?.charAt(0)?.toUpperCase() || '?'}</span>\n                                                                </div>\n                                                                <div>\n                                                                    <div className=\"fw-bold\">{user.Name}</div>\n                                                                    <small className=\"text-muted\">@{user.User_Name}</small>\n                                                                </div>\n                                                            </div>\n                                                        </td>\n                                                        <td>{user.Email}</td>\n                                                        <td>\n                                                            <OverlayTrigger placement=\"top\" delay={{ show: 250, hide: 400 }} overlay={(props) => renderAddressTooltip(props, user.morada)}>\n                                                                <span>{user.morada?.Rua?.substring(0, 25) + (user.morada?.Rua?.length > 25 ? '...' : '') || 'N/A'}</span>\n                                                            </OverlayTrigger>\n                                                        </td>\n                                                        <td>{getUserTypeBadge(user.TipoUserID_TipoUser)}</td>\n                                                        <td>{getStatusBadge(user.Status_UtilizadorID_status_utilizador)}</td>\n                                                        <td>\n                                                            {docInfo.path ? (\n                                                                <a \n                                                                    href={`${getStorageBaseUrl()}/storage/${docInfo.path}`}\n                                                                    target=\"_blank\" \n                                                                    rel=\"noopener noreferrer\"\n                                                                    className=\"btn btn-sm btn-outline-secondary d-inline-flex align-items-center\"\n                                                                    title={docInfo.text}\n                                                                >\n                                                                    <i className={`fas ${docInfo.isPdf ? 'fa-file-pdf' : 'fa-file-image'} me-1`}></i> Ver\n                                                                </a>\n                                                            ) : (\n                                                                <span className=\"text-muted small\">Nenhum</span>\n                                                            )}\n                                                        </td>\n                                                    </tr>\n                                                );\n                                            })\n                                        ) : (\n                                            <tr>\n                                                <td colSpan=\"6\" className=\"text-center text-muted py-4\">\n                                                    Nenhum utilizador encontrado com os filtros atuais.\n                                                </td>\n                                            </tr>\n                                        )}\n                                    </tbody>\n                                </Table>\n                            </>\n                        )}\n                    </Card.Body>\n                </Card>\n            </Container>\n            <Footer />\n        </>\n    );\n};\n\nexport default AllUsers;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}